cmake-build-debug/
.idea/
# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app


# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff:
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/dictionaries

# Sensitive or high-churn files:
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.xml
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml

# Gradle:
.idea/**/gradle.xml
.idea/**/libraries

# Mongo Explorer plugin:
.idea/**/mongoSettings.xml

## File-based project format:
*.iws

## Plugin-specific files:

# IntelliJ
/out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

CMakeCache.txt
CMakeFiles
CMakeScripts
Testing
Makefile
cmake_install.cmake
install_manifest.txt
compile_commands.json
CTestTestfile.cmake

*.tlog
*.iobj
*.ipdb
/x64

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# dotenv
.env

# virtualenv
.venv
venv/
ENV/

# Spyder project settings
.spyderproject

# Rope project settings
.ropeproject
project/msvc14/data/
project/msvc14/x64/
project/msvc15/x64/
project/msvc15/data/
project/msvc15/Y/
project/msvc15/.vs/
project/msvc15/State/
src/flatbuffers/State/
src/game/serialization/
src/game/python/State/
project/msvc15/RemoteAI.py
project/msvc15/DQN.py
project/msvc15/GameMessage_pb2.py
project/msvc15/Main.py
project/msvc15/PyAI.py
project/msvc14/games/
project/msvc14/Algorithms/
project/msvc14/Main.py
project/msvc14/Main_Standalone.py
project/msvc14/PyAI.py
project/msvc14/RemoteAI.py
project/msvc14/State/
project/msvc14/DQN.py
project/msvc14/GameMessage_pb2.py
project/msvc14/WarC2Sim++.VC.VC.opendb
project/msvc14/WarC2Sim++.VC.db
project/msvc14/WarC2Sim++.vcxproj.user
project/msvc15/Algorithms/DQN/
project/msvc14/__init__.py
project/msvc14/deeprts.h5
project/msvc15/Algorithms/__init__.py
project/msvc15/Main_Standalone.py
project/msvc15/__init__.py
WarC2Sim.iml
docs/docs.iml
project/msvc14/.vs/WarC2Sim++/v14/.suo
python/DeepRTS/assets
*.iml
/test/experiments/
test/assets
code/assets
